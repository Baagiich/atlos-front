image: node:20-alpine

stages:
  - lint:commit
  - lint:code
  - test
  - build
  - approve
  - release
  - deploy

before_script:
  - npm ci --cache .npm --prefer-offline

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm/
    - dist/

lint:commit:
  stage: lint:commit
  script:
    - echo "${CI_COMMIT_MESSAGE}" | npx commitlint
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
    - if: $CI_COMMIT_BRANCH == "test"
      when: never
    - when: manual
      allow_failure: false

lint:code:
  stage: lint:code
  script:
    - npm run lint
  rules:
    - if: $CI_COMMIT_BRANCH == "test"
      when: never
    - when: on_success

test:
  stage: test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  script:
    - npm run test-ci
  rules:
    - when: on_success

build:
  stage: build
  script:
    - npm run build
    - cp -a dist/. public/
  artifacts:
    expire_in: 1 week
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "test"
      when: on_success

approve:
  stage: approve
  script:
    - echo ok
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH == "test"
      when: never
    - when: manual
      allow_failure: false

release:
  stage: release
  script:
    - apk update && apk add --no-cache git ca-certificates
    - cp .gitlab/npmrc .npmrc
    - npx semantic-release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy_to_test:
  stage: deploy
  before_script:
    - apk add --no-cache openssh
  script:
    - chmod 600 $TEST_SERVER_PRIVATE_KEY
    - >
      ssh -oStrictHostKeyChecking=no -T -i $TEST_SERVER_PRIVATE_KEY $TEST_SERVER_HOST "cd /home/ubuntu/atlos-backend; rm -rf artifacts.zip; curl --location --output artifacts.zip --header \"PRIVATE-TOKEN: $GITLAB_TOKEN\" \"https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/test/download?job=build\"; sh /home/ubuntu/atlos-backend/deploy-front.sh"
  rules:
    - if: $CI_COMMIT_BRANCH == "test"
      when: on_success
